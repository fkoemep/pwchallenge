select_admission_query: SELECT SUM(s.price) AS total_stay_cost, a.patient_code, a.admission_datetime, a.discharge_datetime
  FROM admission a
  INNER JOIN patient p ON a.patient_code = p.patient_code
  CROSS JOIN LATERAL generate_series(a.admission_datetime, a.discharge_datetime, '1 day'::interval) stay_date
  LEFT JOIN LATERAL (SELECT price_date_from, price FROM stay_daily_cost WHERE price_date_from <= stay_date ORDER BY price_date_from DESC LIMIT 1) s ON true
  GROUP BY a.patient_code, a.admission_datetime, a.discharge_datetime;
select_test_admission_query: SELECT t.test_name, t.test_code, tc.price AS test_cost, ta.patient_code, ta.admission_datetime AS test_datetime, d.doctor_name, d.npi_number,
  d.practice as doctor_practice
  FROM test_admission ta
  INNER JOIN patient p ON ta.patient_code = p.patient_code
  INNER JOIN doctor d ON ta.npi_number = d.npi_number
  INNER JOIN test_cost tc ON ta.test_code = tc.test_code
  INNER JOIN test t ON ta.test_code = t.test_code;
select_alternative_query: SELECT SUM(s.price) AS total_stay_cost, SUM(COALESCE(tc.price, 0)) AS total_tests_cost, a.patient_code, a.admission_datetime, a.discharge_datetime
  FROM admission a
  INNER JOIN patient p ON a.patient_code = p.patient_code
  CROSS JOIN LATERAL generate_series(a.admission_datetime, a.discharge_datetime, '1 day'::interval) stay_date
  LEFT JOIN test_admission ta ON a.patient_code = ta.patient_code AND ta.test_datetime::date = stay_date::date
  LEFT JOIN doctor d ON ta.npi_number = d.npi_number
  LEFT JOIN test_cost tc ON ta.test_code = tc.test_code
  LEFT JOIN test t ON ta.test_code = t.test_code
  LEFT JOIN LATERAL (SELECT price_date_from, price FROM stay_daily_cost WHERE price_date_from <= stay_date ORDER BY price_date_from DESC LIMIT 1) s ON true
  GROUP BY a.patient_code, a.admission_datetime, a.discharge_datetime;
